"use strict";(self.webpackChunkKarmaCoin=self.webpackChunkKarmaCoin||[]).push([[5645],{3905:(e,n,a)=>{a.d(n,{Zo:()=>d,kt:()=>m});var t=a(7294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=t.createContext({}),l=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},d=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},h=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=l(a),h=i,m=u["".concat(c,".").concat(h)]||u[h]||p[h]||r;return a?t.createElement(m,s(s({ref:n},d),{},{components:a})):t.createElement(m,s({ref:n},d))}));function m(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,s=new Array(r);s[0]=h;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[u]="string"==typeof e?e:i,s[1]=o;for(var l=2;l<r;l++)s[l]=a[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}h.displayName="MDXCreateElement"},1539:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var t=a(7462),i=(a(7294),a(3905));const r={id:"blockchain",title:"Blockchain Design",sidebar_label:"Blockchain",slug:"/blockchain"},s="Blockchain Design",o={unversionedId:"design/blockchain",id:"version-0.1.0/design/blockchain",title:"Blockchain Design",description:"This page describes the Karma Coin on-chain data. We are using Protobufs as the language to describe the data.",source:"@site/versioned_docs/version-0.1.0/design/blockchain_design.md",sourceDirName:"design",slug:"/blockchain",permalink:"/docs/blockchain",draft:!1,editUrl:"https://github.com/avive/karmacoin-docs/versioned_docs/version-0.1.0/design/blockchain_design.md",tags:[],version:"0.1.0",lastUpdatedBy:"avive",lastUpdatedAt:1676979705,formattedLastUpdatedAt:"Feb 21, 2023",frontMatter:{id:"blockchain",title:"Blockchain Design",sidebar_label:"Blockchain",slug:"/blockchain"},sidebar:"version-0.1.0/someSidebar",previous:{title:"\ud83d\ude4b\u200d\u2642\ufe0f Nomination",permalink:"/docs/testnet/nominator"},next:{title:"Blockchain Config",permalink:"/docs/blockchain-config"}},c={},l=[{value:"On-chain Data Modeling",id:"on-chain-data-modeling",level:2},{value:"Basic Data Types",id:"basic-data-types",level:3},{value:"Users Data",id:"users-data",level:3},{value:"Phones Verifier",id:"phones-verifier",level:3},{value:"Onchain Data",id:"onchain-data",level:3},{value:"Consensus Protocol",id:"consensus-protocol",level:2},{value:"Accounts and Addresses",id:"accounts-and-addresses",level:2},{value:"Mobile phone verifiers",id:"mobile-phone-verifiers",level:2},{value:"Transactions",id:"transactions",level:2}],d={toc:l},u="wrapper";function p(e){let{components:n,...a}=e;return(0,i.kt)(u,(0,t.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"blockchain-design"},"Blockchain Design"),(0,i.kt)("p",null,"This page describes the Karma Coin on-chain data. We are using ",(0,i.kt)("inlineCode",{parentName:"p"},"Protobufs")," as the language to describe the data. "),(0,i.kt)("p",null,"The design decisions assume Karma Coin blockchain will be implemented using ",(0,i.kt)("inlineCode",{parentName:"p"},"Substrate"),". "),(0,i.kt)("p",null,"This design constraint influences the data modeling as we ensure compatibility with Substrate basic data types and idioms. For example, account Ids are not just ED25519 public keys as they include a chain-id prefix to avoid cross-chains signature issues and balances are defined to support locked funds."),(0,i.kt)("h2",{id:"on-chain-data-modeling"},"On-chain Data Modeling"),(0,i.kt)("p",null,"The following section describes the data stored on-chain."),(0,i.kt)("h3",{id:"basic-data-types"},"Basic Data Types"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-protobuf"},"// Account id is derived from a public key\nmessage AccountId {\n  // net id and public key per Substrate concept\n  bytes data = 1;\n}\n\n// CharTrait defines specific supported character traits\nenum CharTrait {\n  CHAR_TRAIT_KIND = 0;\n  CHAR_TRAIT_HELPFUL = 1;\n  CHAR_TRAIT_SMART = 2;\n  // etc...\n}\n\n// TraitName associates a name to each unique CharTrait\nmessage TraitName {\n  CharTrait trait = 1;\n  string name = 2;\n}\n\n// TraitScore is a specific character trait score for a specific user\nmessage TraitScore {\n  CharTrait trait = 1;\n  uint32 score = 2;\n}\n\n// A non-negative coin amount in a supported coin type\nmessage Amount {\n  uint64 value = 1;\n}\n\n// We use substrate notions here to support PoStake consensus such as locked funds\nmessage Balance {\n  Amount free = 1;\n  Amount reserved = 2;\n  Amount misc_frozen = 3;\n  Amount fee_frozen = 4;\n}\n")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"users-data"},"Users Data"),(0,i.kt)("p",null,"A user has basic account info such as AccountId, a unique user-name (string) and a verified mobile phone number.\nIn addition, coin balances and translations nonce are stored for each user.\nThe user's score for each character trait that has a non-zero score is maintained.\nPre-encryption keys are stored to facilitate e2e messaging between any two users."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-protobuf"},"message User {\n  AccountId account_id = 1; // account id derived from a public key\n  uint64 nonce = 2;\n  string user_name = 3; // unique across the system\n  MobileNumber mobile_number = 4; // verified current number\n  repeated Balance balance = 5;\n  repeated TraitScore trait_scores = 6;\n  repeated PreKey pre_keys = 7; // one-time enc pre-keys for e2e messaging\n}\n")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"phones-verifier"},"Phones Verifier"),(0,i.kt)("p",null,"Phones verifiers are used to verify user's mobile phone numbers. The account ids and names of active verifiers which are in-consensus  are stored on-chain. Sudo or governance operations may modify this data."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-protobuf"},"message PhoneVerifier {\n  AccountId account_id = 1; // verifier's account id\n  string name = 2;\n}\n")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"onchain-data"},"Onchain Data"),(0,i.kt)("p",null,"The following is a conceptual definition of all on-chain stored data. Besides users and verifiers, the chain stores all executed transactions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-protobuf"},"message OnChainData {\n  repeated User users = 1;\n  repeated PhoneVerifier sms_verifiers = 2;\n  repeated TraitName traits = 3; // char trait ids supported by the system\n  repeated SignedTransaction transactions = 4; // all transactions in blocks\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"see Transactions for additional information about Karma Coin transactions...")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"consensus-protocol"},"Consensus Protocol"),(0,i.kt)("p",null,"Karma Coin uses a nominated Proof of Stake (nPOS) consensus protocol with deterministic finality on blocks. The protocol used is Parity tech ",(0,i.kt)("inlineCode",{parentName:"p"},"Babe")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Grandpa"),". Block producers and validators must stake an amount of KCoin in order to participate in the network. Entities who want to participate in the consensus protocol must be both block producers and validators."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"accounts-and-addresses"},"Accounts and Addresses"),(0,i.kt)("p",null,"Karma Coin uses accounts and addresses so the standard Substrate wallets can be used with Karma Coin."),(0,i.kt)("p",null,"Karma Coin should Substrate SS58 address format for accounts identifiers. "),(0,i.kt)("p",null,"Users key pairs should use the ED25519 scheme."),(0,i.kt)("p",null,"Accounts ids should be derived from user's maintain public keys and include a network id to avoid cross-chain signing issues. If public key for signature verification purposes can't be obtained from these ids then it needs to be included separately in signed transactions and messages so signatures can be verified."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"mobile-phone-verifiers"},"Mobile phone verifiers"),(0,i.kt)("p",null,"Verifiers should always run a blockchain node and must always participate in the consensus protocol. e.g. they are both block producers and validators. Verifiers servers should be configured to have local access to a node managed by the verifiers and use the same ids for verification and consensus participation."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"transactions"},"Transactions"),(0,i.kt)("p",null,"Karma Coin supports 3 kinds of blockchain transactions: ",(0,i.kt)("inlineCode",{parentName:"p"},"NewUser"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Update")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Payment"),". Each transaction is signed by the user's private key which corresponds to its public accountId. For more information about the built-in transactions see ",(0,i.kt)("a",{parentName:"p",href:"/docs/transactions"},"Transactions"),"."),(0,i.kt)("hr",null),(0,i.kt)("admonition",{title:"License",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Copyright (c) 2022 by the Karma Coin Authors. This work is licensed under the ",(0,i.kt)("a",{parentName:"p",href:"/docs/license"},"Karma Coin License"),".")))}p.isMDXComponent=!0}}]);